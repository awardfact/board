7/6  
php책을 읽어서 php에서 print, 배열 사용법, 데이터베이스 명령어 등을 배웠고
bitnami를 설치, 툴로 atom을 설치 후 html, php파일을 만들고 form을 통해 php파일에 접근하려고 
했으나 php파일의 코드만 떠서 인터넷을 이용하여 localhost주소에 파일을 만들지 않아서 그런 것임을 알게되었다

7/7 
html기본 화면을 만들고 html의 css와 클릭 이벤트를 처리하려고 onClick()을 사용하려고 했으나
JQuery로 만들라고 하셔서 JQuery 사용 하는 법과 기본 문법을 공부하였다,
html오류가 어디에 뜨는지 몰랐으나 f12를 누르면 오류가 뜬 다는것을 알게 되었다.
php로 데이터베이스가 잘 되는지 연습코드를 짜고 실행하려고 했는데 계속 오류가 떳었는데
sql문에 변수를 사용하려면 '".$data."' 이런식으로 사용해야 한다는 것을 알게되었다.
php파일은 데이터를 클라이언트에만 넘기는 용도로 생각해서 form을 활용하지 않고 
ajax로 사용하려고 했으나 php파일에도 html코드를 사용해서 기본 페이지를 만들어도 된 다는것을 알게되어
php파일에 제작을 하기 시작하였다.
form으로 데이터를 넘기고 php에서 $_POST['data']로 받아서 사용하려고 했지만 계속 오류가 떳다
하지만 form으로 넘기는 데이터는 id가 아니라 name이란 걸 알게되었고 form태그 안에 있는 name만 POST로 넘긴다는 것을 알게되었다.


7/9
php에서 실행이 정상적으로 안 되면 오류가 안 뜨고 그냥 빈 화면만 떳었는데
php.ini파일에서 log_errors를 ON으로 바꾸면 에러가 뜬 다는 것을 알게되었다.
회원가입 화면과 계정 정보를 관리하는 db, db에 접근하는 클래스를 만들었고 
회원가입 화면에서 아이디와 패스워드를 입력하고 회원가입 버튼을 누르면 db에 같은 id가 
없으면 db에 입력 아이디와 패스워드가 추가되는 기능을 만들었다
로그인 화면을 만들고 아이디와 패스워드를 입력하면 계정 db에 그 아이디와 패스워드가 일치하는
것이 있는지 확인하고 일치하는 것이 있으면 로그인 하는 기능을 만들었다.
로그인을 해도 다른 페이지로 넘어가면 로그인 정보가 사라졌었는데
세션을 이용해서 로그인 정보가 사라지지 않게 만들었다
php.ini를 수정하면 Notice에러가 뜨지 않는다는 것을 알게되었다.

7/10
게시판 화면과 글쓰기 화면을 만들고 글쓰기 화면에서 제목과 내용을 입력하면
게시만 내용을 관리하는 DB에 제목, 내용, 아이디가 추가되는 기능을 만들었다
게시판 화면에 접속하면 처음에는 SNO넘버가 가장높은 10개만 출력하는 기능을 만들었다
처음엔 클릭하면 스크립트에서 php변수를 바꿔서 바뀐 php변수에 따라 글 제목, 내용등을 프린트하려고 했으나
스크립트에서 php변수를 바꿀 수 없다는 것을 알게되어 ajax방식으로 하려고 했으나 이것도 잘 되지 않아서 
post로 php변수를 보내서 글 내용을 출력하는 방식으로 바꾸었다
그리고 출력 할때 조회수를 1 올려서 데이터베이스에 저장하게 했다.


7/13
이클립스로 ftp연결하는 법을 인터넷에서 찾아보고 ftp에 연결하였다.
고도몰을 보기 전에 MVC패턴에 대해서 공부를 하였다. 
고도몰 개발 가이드를 보고 Controller를 생성하는 법과 어떻게 동작하는지를 알게 되었다.
_template 기본 코드를 공부하였다.
Controller에서 setData한 것을 skin에서 _template를 이용하여 출력하는 법을 알게 되었다.
고도몰 이름 짓는 법을 알게 되었다.
고도몰 개발 가이드를 한번씩 읽어보았다.


7/14
고도몰에서 db에 연결한 다음에 INSERT DELETE UPDATE SELECT을 실행해서
스킨에 데이터를 출력해보았다
고도몰에서 게시판 리스트를 출력하고 글을 누르면 글 내용이 나오고 수정하기 클릭해서
데이터를 입력하고 완료 누르면 그 데이터를 수정하고 게시판에 체크박스를 만들고
삭제하기를 누르면 체크박스가 체크 되어있는 게시글만 삭제하는 기능을 만들었다.

7/15
게시판 작성할 때 파일을 넣으면 파일 이름을 유니크 코드로 만들어 업로드하고 
db에는 유니크 코드 이름을 넣어서 게시글을 볼 때 경로에 있는 유니크코드를 통해 이미지를 불러오도록 만들었다.
게시글을 삭제하면 업로드한 이미지가 같이 삭제되도록 만들었다.
게시글 수정에서 기존 이미지 삭제 체크박스를 체크하고 입력하면 파일을 업로드 하지 않아도 기존 이미지가 삭제되도록 만들었다.
게시글에서 댓글을 입력하고 댓글입력 버튼을 누르면 ajax를 이용해서 댓글을 db에 추가하고 페이지를 reload해서 실시간으로 
입력한 댓글을 보이게 만들었다.
게시글을 삭제하면 입력한 댓글들도 같이 삭제하도록 만들었다.

7/16
게시글 내용 옆에 댓글이 있으면 댓글 개수를 내용 옆에 출력하도록 만들었다.
게시글에 들어가서 댓글을 수정, 삭제할 수 있도록 만들었다
한 페이지의 게시글 수를 selectBox에 체크되어있는 수에 따라 출력되도록 만들었다
selectBox수와 게시글 수에 따라 페이지를 만들고 현재 페이지 정보에 따라 
현재 1페이지에 있으면 1 2 3 4 5 >>>(끝페이지로 이동) 이 화면에 표시되고(페이지가 있다면) 
현재 페이지를 제외한 다른 페이지 번호를 클릭하면 그 페이지로 이동되도록 만들었다. 


7/17
로그인 회원가입 버튼을 만들고 클릭하면 board_signup.html로(form , get) 이동하고 클릭한 버튼에 따라 
mode를 login또는 register로 바꿔주고 board_signup화면에서는 mode값에 따라 회원가입, 로그인 화면을 출력한다 
회원가입 화면은 아이디 입력, 패스워드 입력, 패스워드 확인 3가지 필드가 존재한다 
아이디 입력필드 오른쪽에는 입력해주세요라고 텍스트가 출력되는데 propertychange change keyup paste input를 이용해서
입력 할때마다 값을 얻어와서 사용하기 적절한 아이디인지 검사를 한다 먼저 길이로 체크를 하는데 길이가 0이면
입력해주세요 메시지를 오른쪽에 출력하고 1~4자리면 아이디가 짧습니다. 메시지를 오른쪽에 출력하고 
아이디가 12자리가 넘어가면 아이디가 너무 깁니다 메시지를 출력하고 이것들에 포함되지 않은 길이라면 특수기호, 한글등을
쓰지 않았는지 만들어논 정규식 검사를 진행한다 처음에 정규식을 알지 못 해서 정규식을 공부한 다음에 정규식이 잘 적용되는지
검사하는 사이트가 있어서 검사를 한 후에 적용했다.
검사값이 false라면 부적절한 아이디입니다 메시지를 출력하고 
적절한 아이디라면 오른쪽에 메시지를 출력하지 않는다. 그리고 아이디 입력필드에서 포커스가 아웃되면 ajax를 이용하여
db에 같은 id가 있는지 확인을 한다 리턴값이 1이면 중복된 아이디가 없는것이고 0이면 중복된 아이디가 있는 것인데
1을 리턴했다면 오른쪽에 적절한 아이디입니다. 메시지를 출력한다
이때 리턴값 뒤에 html코드가 같이 출력되었는데 리턴값을 split substring 해봤는데 되지 않아서  
ajax를 잘못 사용한 줄 알고 ajax를 다시 찾아보고 했었는데 원인이 echo를 여러번 써서 리턴값이 중복해서 적용되었던 것이었다
그래서 echo후에 exit;를 사용해서 원하는 값만 리턴되게 했다.
그리고 패스워드 필드도 아이디와 같이 오른쪽에 입력해주세요 메시지를 출력하고 입력될때마다 검사를 해서
길이가 0이면 입력해주세요 0이 아니라면 미리 정해논 패스워드 규칙 정규식 검사를 실행한다(8~15자리 숫자,영소문자,영대문자,특수문자 포함)
검사값이 false라면 규칙에 맞는 패스워드를 입력하라고 메시지를 출력하고 true라면 적절한 패스워드라고 메시지를 출력한다 
그리고 패스워드 확인 필드에도 이와같은 방법으로 입력한 패스워드 필드와 패스워드 확인 필드의 값이 같다면 동일한 패스워드입니다를 출력한다
그리고 모든 조건을 만족했다면 회원가입 글자가 버튼으로 바뀌어 회원가입을 할 수 있다 이것을 클릭하면 db에 회원 정보가 들어가고
회원가입 성공이라고 메시지를 출력한다 


7/20
고도몰 패치하는 방법을 배우고 테스트 아이디를 받아서 패치를 직접 적용해보았다
고도몰에 로그인 해서 해당 아이디에 있는 패치&업그레이드에 들어가서 패치내용을 다운받아 패치내용 보고
먼저 패치가 적용된 파일을 파일질라를 통해 PC에 백업해놓고 수정사항을 적용 한 다음에 저장하는 방식으로 적용했다
그리고 회원가입을 통해 만든 id가지고 로그인을 하는 것을 만들었는데
메인화면에서 로그인 버튼을 누르면 로그인 화면으로 이동하고 아이디와 패스워드를 입력하는 필드가 뜬다
여기서 아이디와 패스워드를 입력하고 로그인 버튼을 누르면 db에 아이디와 패스워드가 일치하는 row가 있는지 확인하고
없으면 로그인 실패를 alert하고 다시 로그인 화면으로 되돌아가고 로그인을 성공했다면 세션을 추가하고 로그인 성공을  alert한다 
세션은 원본소스를 보고 세션을 어떻게 적용하는지 본 다음에 원본소스와 같이 세션을 만들었다
그리고 로그인 상태라면 메인화면에서 로그인과 회원가입 버튼이 사라지고 로그아웃 버튼이 생기게 만들고 로그아웃 버튼을 누르면
세션에 등록된 아이디를 없애주도록 만들었다
그리고 원래는 로그인 기능이 없어서 글과 댓글을 쓸때 직접 입력하였었는데 로그인한 아이디가 자동으로 들어가도록 만들었다

7/21 
미디어 쿼리를 통해 반응형 웹을 만드는 법을 알게되었다
node.js , spring, react , 라라벨 등 웹 개발에 자주 쓰이는 라이브러리, 프레임워크 등이 어떻게 돌아가는지 찾아보았다
고도몰 원본소스를 보면서 어떻게 만들었는지 보았다

7/22
가마카츠 쇼핑몰 패치를 직접 진행하였다 
처음에 스킨 이름이 생소한 걸로 되어있어서 클래스를 이름을 보고 스킨이 어떤 형식인지 찾아내서
패치를 진행하였다 패치를 진행하고 파일을 저장한 다음에 패치 내용이 제대로 적용되어있는지 확인을 하고


7/23 
php책을 일고 php에서 날짜와 시간 사용법, 해쉬로 변환, 검증 utf-8 텍스트 처리등을 배웠다
유튜브에 고도몰 관리하는 방법을 알려주는 영상이 있어서 시청하였다.
그리고 고도몰 원본 소스를 읽어보았다.

